if (!self.define) { const e = (e) => { e !== 'require' && (e += '.js'); let r = Promise.resolve(); return s[e] || (r = new Promise(async (r) => { if ('document' in self) { const s = document.createElement('script'); s.src = e, document.head.appendChild(s), s.onload = r; } else importScripts(e), r(); })), r.then(() => { if (!s[e]) throw new Error(`Module ${e} didnâ€™t register its module`); return s[e]; }); }; const r = (r, s) => { Promise.all(r.map(e)).then((e) => s(e.length === 1 ? e[0] : e)); }; const s = { require: Promise.resolve(r) }; self.define = (r, t, i) => { s[r] || (s[r] = Promise.resolve().then(() => { const s = {}; const n = { uri: location.origin + r.slice(1) }; return Promise.all(t.map((r) => { switch (r) { case 'exports': return s; case 'module': return n; default: return e(r); } })).then((e) => { const r = i(...e); return s.default || (s.default = r), s; }); })); }; }define('./sw.js', ['./workbox-18e9e952'], ((e) => {
  e.skipWaiting(), e.clientsClaim(), e.precacheAndRoute([{ url: 'bb0c4a3d.js', revision: '4376deac79edb6851c1839c21a05775e' }, { url: 'index.html', revision: '40573315456e17c90b156809ff6e4905' }], {}), e.registerRoute(new e.NavigationRoute(e.createHandlerBoundToURL('/index.html'))), e.registerRoute('polyfills/*.js', new e.CacheFirst(), 'GET');
}));
// # sourceMappingURL=sw.js.map
